kind: pipeline
name: default

services:
- name: docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run

steps:
- name: conform
  image: autonomy/conform:c539351

- name: lint
  image: autonomy/build-container:latest
  pull: true
  environment:
    BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
    BINDIR: /usr/local/bin
  commands:
    - make lint
  volumes:
  - name: dockersock
    path: /var/run

- name: test
  image: autonomy/build-container:latest
  pull: true
  environment:
    BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
    BINDIR: /usr/local/bin
  commands:
    - make test
  volumes:
  - name: dockersock
    path: /var/run

- name: coverage
  image: plugins/codecov
  settings:
    token:
      from_secret: codecov_token
    files:
     - coverage.txt
  depends_on:
  - conform
  - lint
  - test

- name: build
  image: autonomy/build-container:latest
  pull: true
  environment:
    BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
    BINDIR: /usr/local/bin
  commands:
    - make
  volumes:
  - name: dockersock
    path: /var/run

- name: basic-integration
  image: autonomy/build-container:latest
  pull: true
  environment:
    BUILDKIT_HOST: tcp://buildkitd.ci.svc:1234
    BINDIR: /usr/local/bin
  commands:
    - cd hack/dev
    - make integration
  volumes:
  - name: dockersock
    path: /var/run
  depends_on:
  - build

- name: push
  image: autonomy/build-container:latest
  pull: always
  environment:
    DOCKER_USERNAME:
      from_secret: docker_username
    DOCKER_PASSWORD:
      from_secret: docker_password
  commands:
  - make login
  - make push
  volumes:
  - name: dockersock
    path: /var/run
  when:
    event:
      exclude:
      - pull_request
  depends_on:
  - basic-integration

volumes:
- name: dockersock
  temp: {}
